# Get current public IP. We'll need this so we can access the Storage Account from our PC.
data "http" "current_public_ip" {
  url = "http://ipinfo.io/json"
  request_headers = {
    Accept = "application/json"
  }
}

resource "azurerm_storage_account" "storage_functapp" {
  name                      = "acthubtestdev"
  resource_group_name       = var.resource_group_name
  location                  = var.location
  account_tier              = "Standard"
  account_replication_type  = "LRS"
  enable_https_traffic_only = true
  min_tls_version           = "TLS1_2"
  #tags                      = "test"

identity {
    type = var.assign_identity ? "SystemAssigned" : null
  }
network_rules {
    default_action             = var.storage_functapp_firewall_enabled ? "Deny" : "Allow"
    bypass                     = ["AzureServices"]
    virtual_network_subnet_ids = []
    ip_rules = []
      }
}

# Create the Private endpoint for each Storage Account Service. This is how the Storage account gets the private IPs inside the VNet.
resource "azurerm_private_endpoint" "endpoint" {
  count               = length(var.storage_functapp_services)
  name                = "storage_functapp-${var.storage_functapp_services[count.index]}-endpoint"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
  subnet_id           = azurerm_subnet.endpoint.id

  private_service_connection {
    name                           = "storage_functapp-${var.storage_functapp_services[count.index]}-privateserviceconnection"
    private_connection_resource_id = azurerm_storage_account.storage_functapp.id
    is_manual_connection           = false
    subresource_names              = [var.storage_functapp_services[count.index]]
  }

  depends_on = [azurerm_storage_share.functions]
}
# Create the blob.core.windows.net Private DNS Zone
resource "azurerm_private_dns_zone" "private" {
  count               = length(var.storage_functapp_services)
  name                = "privatelink.${var.storage_functapp_services[count.index]}.core.windows.net"
  resource_group_name = azurerm_resource_group.rg.name
}

# Create an A record pointing to each Storage Account service private endpoint
resource "azurerm_private_dns_a_record" "storage_functapp" {
  count               = length(var.storage_functapp_services)
  name                = var.functionappname
  zone_name           = azurerm_private_dns_zone.private[count.index].name
  resource_group_name = azurerm_resource_group.rg.name
  ttl                 = 3600
  records             = [azurerm_private_endpoint.endpoint[count.index].private_service_connection[0].private_ip_address]
}

# Link the Private Zone with the VNet
resource "azurerm_private_dns_zone_virtual_network_link" "storage_functapp" {
  count                 = length(var.storage_functapp_services)
  name                  = "networklink-${azurerm_private_dns_zone.private[count.index].name}"
  resource_group_name   = azurerm_resource_group.rg.name
  private_dns_zone_name = azurerm_private_dns_zone.private[count.index].name
  virtual_network_id    = azurerm_virtual_network.vnet.id
  registration_enabled  = false
}

resource "azurerm_storage_share" "functions" {
  name                 = "${var.functionappname}-content"
  storage_account_name = azurerm_storage_account.storage_functapp.name
}
